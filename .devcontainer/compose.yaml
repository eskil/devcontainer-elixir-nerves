services:
  # The "service" container running the 
  dev:
    build:
      context: ../
      dockerfile: .devcontainer/Dockerfile
    # stdin_open keeps stdin open, so the container doesnâ€™t exit immediately
    # tty allocates a pseudo-TTY, which keeps the container interactive
    # this keeps the container from exiting and why the Dockerfile doesn't
    # need a sleep-infinity
    stdin_open: true
    tty: true
    # We don't use volumes here, we handled that come devcontainer.json's mounts.
    # But these are the two basic mounts, in case you want to use docker compose
    # directly.
    # volumes:
    #   # Mount our root (/workspaces/project)
    #   - type: bind
    #     source: ..
    #     target: /workspaces/project
    #   # Mount our command history
    #   - type: volume
    #     source: command-history
    #     target: /command-history

  # You can add other services here as needed
  # postgres:
  #   image: postgres:15.3
  #   environment:
  #     - POSTGRES_DB=reports
  #     - POSTGRES_PASSWORD=password
  #   network_mode: service:dev

  # redis:
  #   image: redis:7.2-bookworm
  #   network_mode: service:dev


volumes:
  command-history:
